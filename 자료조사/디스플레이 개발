목표:  
- 도스터트 로벌에 탅장할 "감정 표현 디스플레이 시스템"을 개발한다.

1. 디스플레이 종류 및 통신 방식 확인
- 사용할 디스플레이 종류를 확정한다. (HDMI LCD, I2C OLED, LED 메트릭스 등)
- Jetson Orin NX와 어떻게 통신 (I2C, SPI, UART, HDMI)할지 결정한다.
- (하드웨어 담당자와 상의 필요)

2. 감정 표현 리소스(이미지/애니메이션) 제작
- 로벌이 사용할 기본 감정 표현 세트를 디자인 하거나 수집한다:
  - 기본(중력) 여명
  - 웃는 여명 (안내 시작 시)
  - 놀라는 여명 (특별 이벤트 시)
  - 슬프는 여명 (오류 발생 시)
  - 화난 여명 (건물 건너지 경고 등)
  - 인사하는 여명 (작방 인사 시)

3. 디스플레이 제어 프로그램 작성
- Python 또는 C++로 프로그램을 작성하여,
  - 특정 상황(Event)을 감지했을 때
  - 해당하는 감정 이미지를 디스플레이에 뛰어주는다.

- 참고 방법:
  - Python에서는 Pygame, OpenCV를 사용하여 이미지 출력.
  - 연속된 이미지 구현으로 부드러운 전환 효과 추가 가능.

4. 로벌 시스템과 통신 연결
- 로벌 메인 시스템(Whisper, ChatGPT, TTS 처리 흉력)에서 발생하는 이벤트 신호를 수신한다.
  - 예시 이벤트:
    - "start_guide" → 웃는 여명 출력
    - "thank_you" → 인사하는 여명 출력
    - "error" → 슬프는 여명 출력

- 수신 방법 예시:
  - ROS Topic 구독 (Publisher-Subscriber 모델)
  - TCP 소커스 통신 (Python socket server 구현)

5. 전체 기능 테스트 및 최종 개정
- 다양한 상황에서 테스트:
  - 관람객이 요청 → 로벌이 웃으며 안내 시작
  - 안내 완료 → 인사하는 표정 출력
  - 장애물 충당 또는 시스템 오류 → 슬프는 표정 출력

- 테스트 결과에 따라:
  - 감정 표현 전환 속도 조절
  - 애니메이션 부드러운 조정
  - 화면 까마기/지연 최소화

