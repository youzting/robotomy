1. 개발 환경 준비 (25.04.04)
- 필요 프로그램 설치
- 필요 패키지 설치

2. Whisper 예제 생성 (25.04.05)
- transcribe.py 소스 코드 파일 생성 후 테스트
- 사용한 음성 파일은 https://ttsmp3.com 사이트에서 생성함
- 파일의 이름에 따라 transcribe.py 내의 model.transcribe("파일 이름") 을 수정할 필요 있음
- 영어 음성 파일(audio_test_en.mp3)의 문장은 "Hello, how are you?" 이며, 결과 또한 정상적으로
📝 Transcription:
 Hello, how are you?
이와 같이 출력됨을 확인함
- 영어 음성에 이어 한글 음성(audio_test_kr.mp3)으로도 테스트 실행함. 문장을 "안녕하세요."로 작성하였고,
📝 Transcription:
 안녕하세여
이와 같이 출력됨을 확인함
- 팀원의 추가 테스트 요청에 따라 일본어 음성(audio_test_jp.mp3)으로 테스트 실행함. 문장은 "皆さん、こんばんは。いい夜ですね。"로 작성하였고,
📝 Transcription:
皆さんこんばんはいい夜ですね
이와 같이 출력됨을 확인함
- 테스트 실행 결과
간단한 문장을 텍스트로 출력하는 데 노트북 환경에서 7초 정도 소요됨
추후 소요 시간을 줄이는 방법을 모색하겠음

3. TTS 예제 생성 (25.04.06)
- speak.py 소스 코드 파일 생성 후 테스트
- 처음 사용한 TTS 모델은, "tts_models/en/ljspeech/tacotron2-DDC"이며 첫 실행 시 모델을 로드하는 데 시간이 소요됨
- tts.tts_to_file(text="Hello, how are you today?", file_path="output.wav")에서 음성으로 바꿀 텍스트는 text="문장 내용"에서 바꿀 수 있고,
파일 이름은 file_path="파일 이름"에서 바꿀 수 있음
- 영어 문장 "Hello, how are you today?" 입력 결과 output_test_en.wav 파일이 생성됨
- 초기 코드에서는 영어 모델만 사용했기에, 영어 문장만 음성 파일로 만들 수 있음
- 여러 언어를 사용하기 위해서, 다양한 언어의 TTS 모델(영어,한글,일본어,...)을 가져와서 langdetect 패키지를 설치함
- langdetect 패키지를 쓰면 문장의 언어를 감지해서 자동으로 모델을 선택할 수 있음

4. TTS 다국어 모델 테스트 (25.04.13)
- speak.py 소스 코드 교체
- 현재 TTS 라이브러리는 한국어 모델을 지원하지 않음
- 이로 인해 다국어 모델을 통해서 한국어 음성을 출력 시도함
- 사용하는 다국어 모델은 xtts_v2
- 입력한 예시용 음성 파일을 토대로 원하는 문장을 TTS 음성 파일로 만들어 냄
- 먼저, 영어를 테스트하기 위해서 audio_test_en.mp3 파일을 토대로 "Hello, how are you? Nice to meet you." 문장을 작성하였고,
output_test_en.wav 파일이 출력됨
음성 파일 실행 결과 자연스러운 영어 음성이 출력됨을 확인함
- 두 번째로, 한국어를 테스트하기 위해서 audio_test_kr.mp3 파일을 토대로, "안녕하세요, 만나서 반갑습니다. 좋은 하루 되세요." 문장을 작성하였고,
output_test_kr.wav 파일이 출력됨
음성 파일 실행 결과 자연스러운 한국어 음성이 출력됨을 확인함

5. 실시간 대화 시스템 워크 플로우 및 코드 설계 (25.04.20)
- 노트북 고장으로 인해 현재 실시간 대화 시스템 코드 직접 테스트 불가
- 실시간 대화 시스템 워크 플로우 설계
- 실시간 대화 시스템 코드 설계
- 테스트 및 보완은 04.21.(월) 노트북 수리 완료 예정일에 진행할 것임

6. TTS 테스트 후 개선 (25.04.26)
- speak.py 소스 코드 개선
- langdetect를 이용해 text의 언어를 추정함
- 추정한 언어를 기반으로 언어 별 TTS 모델을 사용함
- 영어의 경우 tacotron2-DDC 사용
- 한국어의 경우 TTS 라이브러리가 한국어 모델을 지원하지 않기에 다국어 모델 xtts_v2 사용
- 일본어의 경우 현재 fugashi와 MeCab 간 오류로 인해 일시적으로 개발 중지 및 차후 개선 예정

7. 실시간 대화 시스템 코드 개선 (25.04.27)
- realtime_chat.py 코드 개선
- 현재 개발은 음성 파일 입력->Whisper로 음성-텍스트 변환->정해둔 응답 생성->텍스트-음성 TTS 생성->자동 출력 까지 이루어짐
- 마이크를 이용한 음성 입력 기능 개발 완료
- 음성 감지 시 음성 녹음 시작 기능 추가
- 일정 시간 이상 무음일 시 녹음 종료 기능 추가
- 종료 키(Ctrl+C) 입력 전까지 대화 자동 반복 기능 추가

8. (25.05.04)
